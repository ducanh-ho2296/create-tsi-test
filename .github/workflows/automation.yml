name: Merge Changes from Upstream

on:
  schedule:
    - cron: '0 0 */2 * *'  # Run every 2 days
  workflow_dispatch:  # Allows manual trigger

jobs:
  merge-upstream:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the local repo
        uses: actions/checkout@v4

      - name: Configure git to ignore changes in specific files
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          echo "README.md merge=ours" >> .gitattributes
          echo "LICENSES/* merge=ours" >> .gitattributes
          echo "workflows/* merge=ours" >> .gitattributes
          echo "LICENSE.md merge=ours" >> .gitattributes
          git add .gitattributes
          git commit -m "Set our merge strategy for specific files."

      - name: Add upstream remote
        run: git remote add upstream https://github.com/run-llama/create-llama.git

      - name: Fetch upstream changes
        run: git fetch upstream main

      - name: Check if main branch has new changes
        id: check_main_changes
        run: |
          git diff --quiet HEAD upstream/main || echo "Main branch has new changes"
          echo "::set-output name=main_changed::$(git diff --quiet HEAD upstream/main && echo "false" || echo "true")"

      - name: Merge main branch changes if any
        if: steps.check_main_changes.outputs.main_changed == 'true'
        run: git merge --allow-unrelated-histories upstream/main -X theirs --no-commit


      - name: Generate branch name for main branch changes
        id: main_branch_name
        if: steps.check_main_changes.outputs.main_changed == 'true'
        run: echo "::set-output name=main_branch::PR-main-$(date '+%d.%B')"

      - name: Create pull request for main branch changes
        if: steps.check_main_changes.outputs.main_changed == 'true'
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PAT }}
          commit-message: "Merge upstream changes to main branch"
          branch: ${{ steps.main_branch_name.outputs.main_branch }}
          title: "Merge Upstream Changes to Main Branch"
          body: |
            This pull request merges the latest changes from the upstream main branch.
            Please review and merge manually.

      - name: Fetch tags from upstream
        run: git fetch --tags upstream

      - name: Get latest tag from upstream
        id: latest_upstream_tag
        run: |
          latest_upstream_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag from upstream: $latest_upstream_tag"
          echo "::set-output name=upstream_tag::$latest_upstream_tag"
      
      - name: Get latest tag from local repo
        id: latest_local_tag
        run: |
          latest_local_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag from local repo: $latest_local_tag"
          echo "::set-output name=local_tag::$latest_local_tag"



      - name: Check if latest tags differ
        id: check_tag_diff
        run: |
          if [[ "${{ steps.latest_upstream_tag.outputs.tag }}" != "${{ steps.latest_local_tag.outputs.tag }}" ]]; then
            echo "Tags differ"
            echo "::set-output name=tag_diff::true"
          else
            echo "Tags are the same"
            echo "::set-output name=tag_diff::false"
          fi

      - name: Merge latest tag from upstream if different
        if: steps.check_tag_diff.outputs.tag_diff == 'true'
        run: git merge --allow-unrelated-histories theirs -X --no-commit --no-ff ${{ steps.latest_upstream_tag.outputs.tag }}

      - name: Generate branch name for tag changes
        id: tag_branch_name
        if: steps.check_tag_diff.outputs.tag_diff == 'true'
        run: echo "::set-output name=tag_branch::PR-Tags-${{ steps.latest_upstream_tag.outputs.tag }}"

      - name: Create pull request for tag changes
        if: steps.check_tag_diff.outputs.tag_diff == 'true'
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PAT }}
          commit-message: "Merge latest tag from upstream: ${{ steps.latest_upstream_tag.outputs.tag }}"
          branch: ${{ steps.tag_branch_name.outputs.tag_branch }}
          title: "Merge Latest Tag from Upstream: ${{ steps.latest_upstream_tag.outputs.tag }}"
          body: |
            This pull request merges the latest tag '${{ steps.latest_upstream_tag.outputs.tag }}' from the upstream repository.
            Please review and merge manually.
